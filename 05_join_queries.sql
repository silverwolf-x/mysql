-- =====================================================
-- MySQL版本 - 连接查询
-- 文件: 05_join_queries.sql
-- 功能: 各种连接查询操作示例
-- =====================================================

USE TPC_H;

-- =====================================================
-- 基本连接查询
-- =====================================================

-- 笛卡尔连接（注意：结果集会很大，实际使用时要小心）
SELECT COUNT(*) as cartesian_count FROM NATION, REGION;

-- 显示小表的笛卡尔连接结果
SELECT * FROM NATION, REGION LIMIT 20;

-- 【例4-29】执行NATION表和REGION表上的等值连接操作
SELECT * FROM NATION, REGION WHERE N_REGIONKEY = R_REGIONKEY;

-- 使用INNER JOIN语法
SELECT * FROM NATION INNER JOIN REGION ON N_REGIONKEY = R_REGIONKEY;

-- 国家销售额统计
SELECT N_NAME, SUM(O_TOTALPRICE) as nation_totalprice 
FROM ORDERS, CUSTOMER, NATION 
WHERE O_CUSTKEY = C_CUSTKEY AND C_NATIONKEY = N_NATIONKEY
GROUP BY N_NAME
ORDER BY nation_totalprice DESC;

-- =====================================================
-- 复杂多表连接
-- =====================================================

-- 【例4-30】执行表CUSTOMER、ORDERS、LINEITEM上的查询操作
SELECT 
    L_ORDERKEY, 
    SUM(L_EXTENDEDPRICE * (1 - L_DISCOUNT)) as revenue,
    O_ORDERDATE, 
    O_SHIPPRIORITY
FROM CUSTOMER, ORDERS, LINEITEM
WHERE C_MKTSEGMENT = 'BUILDING' 
  AND C_CUSTKEY = O_CUSTKEY
  AND L_ORDERKEY = O_ORDERKEY 
  AND O_ORDERDATE < '1995-03-15'
  AND L_SHIPDATE > '1995-03-15'
GROUP BY L_ORDERKEY, O_ORDERDATE, O_SHIPPRIORITY
ORDER BY revenue DESC, O_ORDERDATE
LIMIT 20;

-- =====================================================
-- 自身连接
-- =====================================================

-- 【例4-31】输出LINEITEM表上订单中L_SHIPINSTRUCT既包含DELIVER IN PERSON又包含TAKE BACK RETURN的订单号
SELECT DISTINCT L1.L_ORDERKEY 
FROM LINEITEM L1, LINEITEM L2
WHERE L1.L_SHIPINSTRUCT = 'DELIVER IN PERSON' 
  AND L2.L_SHIPINSTRUCT = 'TAKE BACK RETURN' 
  AND L1.L_ORDERKEY = L2.L_ORDERKEY
ORDER BY L1.L_ORDERKEY
LIMIT 10;

-- 验证自连接结果 - 查看示例订单
SELECT * FROM LINEITEM WHERE L_ORDERKEY = 1 ORDER BY L_LINENUMBER;

-- 自连接详细示例
SELECT 
    L1.L_ORDERKEY,
    L1.L_LINENUMBER, 
    L1.L_SHIPINSTRUCT,
    L2.L_LINENUMBER,
    L2.L_SHIPINSTRUCT 
FROM LINEITEM L1, LINEITEM L2
WHERE L1.L_ORDERKEY = L2.L_ORDERKEY
  AND L1.L_ORDERKEY = 1
  AND L1.L_SHIPINSTRUCT = 'DELIVER IN PERSON' 
  AND L2.L_SHIPINSTRUCT = 'TAKE BACK RETURN';

-- 查找同时包含三种运输方式的订单
SELECT DISTINCT L1.L_ORDERKEY
FROM LINEITEM L1, LINEITEM L2, LINEITEM L3
WHERE L1.L_SHIPMODE = 'AIR' 
  AND L2.L_SHIPMODE = 'REG AIR' 
  AND L3.L_SHIPMODE = 'TRUCK' 
  AND L1.L_ORDERKEY = L2.L_ORDERKEY
  AND L1.L_ORDERKEY = L3.L_ORDERKEY
ORDER BY L1.L_ORDERKEY
LIMIT 10;

-- =====================================================
-- 外连接
-- =====================================================

-- 【例4-32】输出ORDERS表与CUSTOMER表左外连接与右外连接的结果
SELECT O_ORDERKEY, O_CUSTKEY, C_CUSTKEY
FROM ORDERS LEFT OUTER JOIN CUSTOMER ON O_CUSTKEY = C_CUSTKEY
LIMIT 20;

SELECT O_ORDERKEY, O_CUSTKEY, C_CUSTKEY
FROM ORDERS RIGHT OUTER JOIN CUSTOMER ON O_CUSTKEY = C_CUSTKEY
LIMIT 20;

-- 全外连接的MySQL实现（使用UNION）
SELECT O_ORDERKEY, O_CUSTKEY, C_CUSTKEY, 'LEFT' as join_type
FROM ORDERS LEFT OUTER JOIN CUSTOMER ON O_CUSTKEY = C_CUSTKEY
UNION
SELECT O_ORDERKEY, O_CUSTKEY, C_CUSTKEY, 'RIGHT' as join_type
FROM ORDERS RIGHT OUTER JOIN CUSTOMER ON O_CUSTKEY = C_CUSTKEY
LIMIT 20;

-- =====================================================
-- 多表连接
-- =====================================================

-- 【例4-33】在TPC-H数据库中执行PARTSUPP表与PART表、SUPPLIER表的星形连接操作
SELECT P_NAME, P_BRAND, S_NAME, PS_AVAILQTY
FROM PART, SUPPLIER, PARTSUPP
WHERE PS_PARTKEY = P_PARTKEY AND PS_SUPPKEY = S_SUPPKEY
LIMIT 20;

-- 使用INNER JOIN语法
SELECT P_NAME, P_BRAND, S_NAME, PS_AVAILQTY
FROM PARTSUPP 
INNER JOIN PART ON PS_PARTKEY = P_PARTKEY 
INNER JOIN SUPPLIER ON PS_SUPPKEY = S_SUPPKEY
LIMIT 20;

-- 【例4-34】在TPC-H数据库中执行雪花型连接操作
-- 修正版本：使用两个NATION表别名来分别处理供应商和客户的国家信息
SELECT 
    C_NAME,
    O_ORDERDATE,
    S_NAME,
    P_NAME,
    N1.N_NAME as SUPPLIER_NATION,
    R1.R_NAME as SUPPLIER_REGION,
    N2.N_NAME as CUSTOMER_NATION,
    R2.R_NAME as CUSTOMER_REGION,
    L_EXTENDEDPRICE * (1 - L_DISCOUNT) - PS_SUPPLYCOST * L_QUANTITY as amount
FROM PART, SUPPLIER, PARTSUPP, LINEITEM, ORDERS, CUSTOMER, 
     NATION N1, REGION R1, NATION N2, REGION R2 
WHERE PS_SUPPKEY = L_SUPPKEY
  AND PS_PARTKEY = L_PARTKEY
  AND O_ORDERKEY = L_ORDERKEY
  AND C_CUSTKEY = O_CUSTKEY
  AND PS_PARTKEY = P_PARTKEY
  AND PS_SUPPKEY = S_SUPPKEY
  AND S_NATIONKEY = N1.N_NATIONKEY      -- 供应商国家
  AND N1.N_REGIONKEY = R1.R_REGIONKEY   -- 供应商地区
  AND C_NATIONKEY = N2.N_NATIONKEY      -- 客户国家
  AND N2.N_REGIONKEY = R2.R_REGIONKEY   -- 客户地区
LIMIT 20;

-- 验证连接结果的记录数
SELECT COUNT(*) as total_joins
FROM PART, SUPPLIER, PARTSUPP, LINEITEM, ORDERS, CUSTOMER, 
     NATION N1, REGION R1, NATION N2, REGION R2 
WHERE PS_SUPPKEY = L_SUPPKEY
  AND PS_PARTKEY = L_PARTKEY
  AND O_ORDERKEY = L_ORDERKEY
  AND C_CUSTKEY = O_CUSTKEY
  AND PS_PARTKEY = P_PARTKEY
  AND PS_SUPPKEY = S_SUPPKEY
  AND S_NATIONKEY = N1.N_NATIONKEY
  AND N1.N_REGIONKEY = R1.R_REGIONKEY
  AND C_NATIONKEY = N2.N_NATIONKEY
  AND N2.N_REGIONKEY = R2.R_REGIONKEY;

-- =====================================================
-- 特殊连接示例
-- =====================================================

-- 供应商和国家连接示例
SELECT S_NAME, N_NAME, R_NAME
FROM SUPPLIER, NATION, REGION 
WHERE S_NATIONKEY = N_NATIONKEY 
  AND N_REGIONKEY = R_REGIONKEY
LIMIT 20;

-- 客户按地区分组统计
SELECT R_NAME, COUNT(*) as customer_count, AVG(C_ACCTBAL) as avg_balance
FROM CUSTOMER, NATION, REGION
WHERE C_NATIONKEY = N_NATIONKEY 
  AND N_REGIONKEY = R_REGIONKEY
GROUP BY R_NAME
ORDER BY customer_count DESC;

-- 零件供应商关系统计
SELECT P_TYPE, COUNT(DISTINCT PS_SUPPKEY) as supplier_count
FROM PART, PARTSUPP
WHERE P_PARTKEY = PS_PARTKEY
GROUP BY P_TYPE
ORDER BY supplier_count DESC
LIMIT 20;
